plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.personal'
version = '0.0.2'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation ("org.springframework.boot:spring-boot-starter-data-jdbc") // JDBC
	implementation("org.springframework.boot:spring-boot-starter-data-jpa") // JPA
//	implementation ("org.springframework.boot:spring-boot-starter-data-redis-reactive") // Redis Reactive
//	implementation ("org.springframework.boot:spring-boot-starter-data-rest") // REST API
//	implementation ("org.springframework.boot:spring-boot-starter-oauth2-client") // OAuth2 Client
	implementation("org.springframework.boot:spring-boot-starter-security") // 인증/인가
	implementation("org.springframework.boot:spring-boot-starter-web") // 동기 웹
	implementation("org.springframework.boot:spring-boot-starter-webflux") // 비동기 웹
//	implementation ("org.springframework.session:spring-session-data-redis") // Redis 세션 저장소
//	implementation ("org.springframework.session:spring-session-jdbc") // JDBC 세션 저장소
//	implementation ("com.h2database:h2")  // H2 데이터베이스
	implementation("mysql:mysql-connector-java:8.0.33") // MySQL 데이터베이스
	implementation("io.jsonwebtoken:jjwt-api:0.11.5") // JWT API

	implementation("org.springframework.boot:spring-boot-starter-validation")        // @Valid, @Validated 등
	implementation("org.springframework.boot:spring-boot-starter-actuator")          // 헬스체크 등 (옵션)
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0") // Swagger UI

	runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5") // JWT 구현체
	runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.5") // JSON 파싱용
	
	compileOnly("org.projectlombok:lombok")

	developmentOnly("org.springframework.boot:spring-boot-devtools")

	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor")
	annotationProcessor("org.projectlombok:lombok")

	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation("io.projectreactor:reactor-test")
	testImplementation("org.springframework.security:spring-security-test")

	testRuntimeOnly("org.junit.platform:junit-platform-launcher")

}

tasks.named('test') {
	useJUnitPlatform()
}
